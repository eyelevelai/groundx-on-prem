env = dict(
    accessKey="${fileUsername}",
    accessSecret="${filePassword}",
    annotationBase="layout/processed/",
    cacheDir="/app/hf_models_cache",
    callbackAPIKey="${validUsername}",
    deviceType="${deviceType}",
    env="prod",
    includeLS=False,
    layoutBroker="redis://${cacheAddr}:${cachePort}/0",
    layoutLogger="${layoutService}",
    layoutResultBroker="redis://${cacheAddr}:${cachePort}/0",
    metricsAddr="${metricsAddr}",
    metricsPort=${metricsPort},
    minBatchSize=${minBatchSize},
    ocrBase="layout/raw/",
    ocrCredentials="credentials.json",
    ocrProject="${ocrProject}",
    ocrType="${ocrType}",
    podMemory="${podMemory}",
    queueType="kafka",
    service="${layoutService}",
    uploadBase="layout/processed/",
    uploadBaseURL="${fileBaseDomain}",
    uploadBucket="${uploadBucket}",
    uploadReplaceURL="${fileSSL ? "https" : "http"}://${fileBaseDomain}/${uploadBucket}/",
    uploadSSL=${fileSSL ? "True" : "False"},
    uploadType="minio",
    uploadURL="${fileSSL ? "https" : "http"}://${fileBaseDomain}/${uploadBucket}/",
    validAPIKeys=["${validAPIKey}", "${validUsername}"],
    workers=${workers},
)
