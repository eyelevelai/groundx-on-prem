# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
env.tfvars
env-*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore all terraform.tfvars files
**/terraform.tfvars

# Do not ignore terraform.tfvars.example files
!**/terraform.tfvars.example

# Ansible
.vault_pass.txt
*.retry
.vagrant/

# Docker
*.env
*.log
docker-compose.override.yml

# Other
kubeconfig_eks
.idea/
.DS_Store
*.crt
*.key
*credentials.*
*.command
*.rdb
out

gcv*.json
autoscaler.tf
hpa.tf
modules/metrics
modules/scaling/hpa
operator/app/metrics
test-gx
test*
