{{- $ns := include "groundx.ns" . -}}
{{- $sets := .Values.layout.internal | default dict -}}
{{- range $name, $cfg := $sets }}
{{- if and (kindIs "map" $cfg) (ne $name "serviceName") }}
{{- $workers := int (default 1 $cfg.workers) -}}
{{- $threads := default 1 $cfg.threads -}}
{{- $queues := (hasKey $cfg "queues") | ternary ($cfg.queues | default (list)) (list (default "" $cfg.queue)) -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: layout-{{ $name }}-supervisord-conf-map
  namespace: {{ $ns }}
data:
  supervisord.conf: |
    [supervisord]
    nodaemon=true
    logfile=/dev/null
    {{- range $i, $_ := until $workers }}

    [program:celery_worker_{{ add $i 1 }}]
    command=celery -A document.celery_process.app worker -n %(ENV_POD_NAME)s-w{{ add $i 1 }} --loglevel=INFO --queues={{ join "," $queues }} --concurrency={{ $threads }}
    environment=
      {{- if eq $name "inference" }}
      CELERY_WORKER_NAME="%(ENV_POD_NAME)s-w{{ add $i 1 }}",
      {{- end }}
      LOCAL="0",
      PYTHONUNBUFFERED="1"
    autostart=true
    autorestart=true
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0

    {{- if eq $name "inference" }}

    [program:celery_monitor]
    command=python /app/document_monitor.py
    environment=
        LOCAL="0",
        PYTHONUNBUFFERED="1"
    autostart=true
    autorestart=true
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0

    [program:celery_health]
    command=python /app/document_health.py
    environment=
        LOCAL="0",
        PYTHONUNBUFFERED="1"
    autostart=true
    autorestart=true
    stdout_logfile=/dev/stdout
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/stderr
    stderr_logfile_maxbytes=0
    {{- end }}
{{ end }}
{{ end }}
{{ end }}
