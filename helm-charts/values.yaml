namespace: eyelevel
createNamespace: true
ingestOnly: false
languages:
  - en
logLevel: info
hasMig: false

admin:
  apiKey: "00000000-0000-0000-0000-000000000000"
  email: "support@mycorp.net"
  password: "password"
  username: "00000000-0000-0000-0000-000000000000"

cluster:
  # "", "eks", "aks", "gke", "openshift", etc.
  type: eks

  nodeLabels:
    cpuMemory: eyelevel-cpu-memory
    cpuOnly: eyelevel-cpu-only
    gpuLayout: eyelevel-gpu-layout
    gpuRanker: eyelevel-gpu-ranker
    gpuSummary: eyelevel-gpu-summary

  tls:
    existingSecret: ""

cache:
  internal:
    replicas:
      min: 1
      desired: 1
      max: 1
    serviceName: cache
    isCluster: false
    port: 6379
    type: ClusterIP

  # set to use external cache
  existing: {}          
#    addr: redis.mycorp.net
#    isCluster: true
#    port: 6379

  metrics:
    enabled: true

    internal:
      replicas:
        min: 1
        desired: 1
        max: 1
      serviceName: metrics
      isCluster: false
      port: 6379
      type: ClusterIP

    # set to use external metrics cache
    existing: {}
#      addr: redis-metrics.mycorp.net
#      isCluster: true
#      port: 6379

db:
  dbName: eyelevel
  serviceUser: eyelevel
  servicePassword: password
  privilegedUsername: root
  privilegedPassword: password

  internal:
    serviceName: mysql
    port: 3306

  # set to use external MySQL DB
  existing: {}
#    ro: myro.mycorp.net
#    rw: myrw.mycorp.net
#    port: 3306

file:
  bucketName: eyelevel
  username: minio
  password: minio123
  # minio or sqs
  serviceType: minio

  internal:
    serviceName: minio
    port: 9000
    customDomain: ""

    # set to expose minio externally
    load_balancer: {}
#      port: 8080
#      ssl: true
#.     target: 9000

  # set to use existing minio file storage
  existing: {}
#.   domain: minio.mycorp.net
#    port: 9000
#    ssl: true

search:
  indexName: prod-1
  username: eyelevel
  password: R0otb_*t!kazs
  privilegedPassword: R0otb_*t!kazs
  privilegedUsername: admin

  internal:
    serviceName: opensearch
    port: 9200

  existing: {}
#    domain: search.mycorp.net
#    url: https://search.mycorp.net:9200
#    port: 9200

stream:
  internal:
    serviceName: kafka
    port: 9092

  existing: {}
#    domain: kafka.mycorp.net
#    url: https://kafka.mycorp.net:9092
#    port: 9092

summary:
  internal:
    api:
      threads: 4
      timeout: 240
      workers: 1
    inference:
      deviceType: cuda
      deviceUtilize: 0.9
      threads: 1
      workers: 1
    queue: file-summary
    serviceName: summary

    # set to expose summary service externally
    load_balancer: {}
#      port: 8080
#      ssl: true
#.     target: 8080

  existing: {}
#    apiKey: my-oai-key
#    serviceType: openai
#    url: https://api.openai.com/v1

dashboard:
  internal:
    serviceName: dashboard

groundx:
  internal:
    port: 8080
    serviceName: groundx
    type: all

layout:
  internal:
    api:
      threads: 2
      timeout: 120
      workers: 2
    correct:
      queue: correct_queue
      threads: 1
      workers: 1
    inference:
      deviceType: cuda
      queue: layout_queue
      threads: 6
      workers: 1
    map:
      queue: map_queue
      threads: 1
      workers: 1
    ocr:
      project: ""
      queue: ocr_queue
      threads: 1
      type: "tesseract"
      workers: 1
    process:
      batchSize: 40
      queue: process_queue
      threads: 1
      workers: 1
    save:
      queue: save_queue
      threads: 1
      workers: 1
    serviceName: layout

layoutWebhook:
  internal:
    port: 8080
    serviceName: layout-webhook

metrics:
  internal:
    port: 8080
    serviceName: metrics

preProcess:
  internal:
    port: 8080
    queue: file-pre-process
    queueSize: 4
    serviceName: pre-process

process:
  internal:
    port: 8080
    queue: file-process
    queueSize: 4
    serviceName: process

queue:
  internal:
    port: 8080
    queue: file-update
    queueSize: 4
    serviceName: queue

ranker:
  internal:
    api:
      threads: 3
      timeout: 120
      workers: 1
    inference:
      deviceType: cuda
      threads: 1
      workers: 14
    serviceName: ranker

summaryClient:
  engines:
    - engineID: google/gemma-3-12b-it
      maxInputTokens: 100000
      maxOutputTokens: 2000
      maxRequests: 4
      requestLimit: 4
      vision: true

  internal:
    port: 8080
    serviceName: summary-client
    workers: 3

upload:
  internal:
    port: 8080
    queue: file-upload
    queueSize: 4
    serviceName: upload

throughput:
  tpm:
    document: 12500
    page: 500
    summaryRequest: 625
  services:
    layout:
      correct: 500
      inference: 120000
      map: 500
      ocr: 500
      process: 500
      save: 500
    preProcess:
      queue: 6
    process:
      queue: 9
    queue:
      queue: 9
    ranker:
      inference: 0
    summary:
      api: 9600
      inference: 3200
    summaryClient:
      api: 9600
    upload:
      queue: 120