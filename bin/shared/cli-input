#!/usr/bin/env bash

SHARED_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

. "$SHARED_DIR/util"

empty=()

prompt_input() {
    local type="$1"
    local prompt="$2"
    local data=("${!3}")
    local input_prompt="$4"

    local choice
    local data
    local init=false
    local validate_function

    local msg
    local err_msg_1
    local err_msg_n

    if [[ "$type" == "menu" ]]; then
        msg=$(status "Enter your choice")
        err_msg_1=$(status "Enter 1. It's your only choice right now")
        err_msg_n=$(status "Enter a number between 1 and ${#data[@]}")
        validate_function=validate_menu
    elif [[ "$type" == "text" ]]; then
        msg=$input_prompt
        err_msg_1=$msg
        err_msg_n=$msg
        validate_function=validate_text
    elif [[ "$type" == "aws-region" ]]; then
        msg=$input_prompt
        err_msg_1=$(status "Enter a valid AWS region")
        err_msg_n=$(status "Enter a valid AWS region")
        validate_function=validate_aws_region
    elif [[ "$type" == "yn" ]]; then
        msg=$(status "Enter 'y' or 'n'")
        err_msg_1=$msg
        err_msg_n=$msg
        validate_function=validate_yn
    else
        error "invalid prompt type [$type]" >&2
        exit 1
    fi

    while true; do
        if ! $init; then
            echo -e "$prompt\n" >&2
            read -p "$msg" choice
            init=true
        else
            read -p "$msg" choice
        fi

        choice=$(echo "$choice" | tr '[:upper:]' '[:lower:]')

        result=$($validate_function "$choice" "data[@]")
        if [[ $? -eq 0 ]]; then
            echo "$result"
            return 0
        elif [[ $? -eq 1 ]]; then
            error >&2 && echo "" >&2
            msg=$err_msg_1
        else
            error >&2 && echo "" >&2
            msg=$err_msg_n
        fi
    done
}

prompt_menu() {
    local msg=$1
    local menu=("${!2}")
    local output=""

    output+="\n$msg\n\n"
    for i in "${!menu[@]}"; do
        output+="$((i+1)). ${menu[$i]}\n"
    done
    output+="\n"
    
    echo -e "$output"
}

prompt_text() {
    local msg=$1

    echo -e "\n$msg\n\n"
}

validate_aws_region() {
    local choice=$1
    regions=("us-east-1" "us-east-2" "us-west-1" "us-west-2" "af-south-1" "ap-east-1" "ap-south-2" "ap-southeast-3" "ap-southeast-5" "ap-southeast-4" "ap-south-1" "ap-northeast-3" "ap-northeast-2" "ap-southeast-1" "ap-southeast-2" "ap-northeast-1" "ca-central-1" "ca-west-1" "cn-north-1" "cn-northwest-1" "eu-central-1" "eu-west-1" "eu-west-2" "eu-south-1" "eu-west-3" "eu-south-2" "eu-north-1" "eu-central-2" "il-central-1" "me-south-1" "me-central-1" "sa-east-1")

    for region in "${regions[@]}"; do
        if [[ "$choice" == "$region" ]]; then
            echo "$region"
            return 0
        fi
    done

    return 1
}

validate_menu() {
    local choice=$1
    local menu=("${!2}")

    if [[ $choice -ge 1 && $choice -le ${#menu[@]} ]]; then
        echo "${menu[$((choice-1))]}"
        return 0
    fi

    if [[ ${#menu[@]} -gt 1 ]]; then
        return 2
    fi

    return 1
}

validate_text() {
    local choice=$1

    echo $choice

    return 0
}

validate_yn() {
    local choice="$1"

    if [[ "$choice" == "y" || "$choice" == "n" ]]; then
        [[ "$choice" == "y" ]] && echo true || echo false
        return 0
    else
        return 1
    fi
}