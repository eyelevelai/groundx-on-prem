{{- $cc := include "groundx.groundx.create" . -}}
{{- if not (eq $cc "false") -}}

{{- $svc := include "groundx.groundx.serviceName" . -}}
{{- $lb := include "groundx.groundx.loadBalancer" . | trim }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc }}
  namespace: {{ include "groundx.ns" . | quote }}
  labels:
{{ include "groundx.renderDefaultLabels" (dict "name" $svc "indent" 4 "root" $) }}
spec:
  replicas: {{ .Values.groundx.replicas.desired }}
  selector:
    matchLabels:
      app: {{ $svc }}
  template:
    metadata:
      labels:
        app: {{ $svc }}
    spec:
{{ include "groundx.renderSecurityContext" (dict "ctx" .Values.groundx.securityContext "indent" 6 "root" $ "user" 1001) }}
{{ include "groundx.renderNodeSelector" (dict "name" $svc "indent" 6 "root" $) }}
      initContainers:
        - name: wait-for-cache
          image: {{ include "groundx.busybox.image" . }}
          imagePullPolicy: {{ include "groundx.busybox.pull" . | quote }}
          command: ['sh', '-c', "until nc -z {{ printf "%s %v" (include "groundx.cache.addr" .) (include "groundx.cache.port" .) }}; do echo waiting for cache; sleep 2; done"]
        - name: wait-for-file-storage
          image: {{ include "groundx.busybox.image" . }}
          imagePullPolicy: {{ include "groundx.busybox.pull" . | quote }}
          command: ['sh', '-c', "until nc -z {{ printf "%s %v" (include "groundx.file.serviceDependency" .) (include "groundx.file.port" .) }}; do echo waiting for file storage; sleep 2; done"]
        {{- if not .Values.ingestOnly }}
        - name: wait-for-search
          image: {{ include "groundx.busybox.image" . }}
          imagePullPolicy: {{ include "groundx.busybox.pull" . | quote }}
          command: ['sh', '-c', "until nc -z {{ printf "%s %v" (include "groundx.search.baseDomain" .) (include "groundx.search.port" .) }}; do echo waiting for search; sleep 2; done"]
        {{- end }}
        - name: wait-for-database
          image: {{ include "groundx.busybox.image" . }}
          imagePullPolicy: {{ include "groundx.busybox.pull" . | quote }}
          command: ['sh', '-c', "until nc -z {{ printf "%s %v" (include "groundx.db.ro" .) (include "groundx.db.port" .) }}; do echo waiting for database; sleep 2; done"]
        - name: wait-for-stream
          image: {{ include "groundx.busybox.image" . }}
          imagePullPolicy: {{ include "groundx.busybox.pull" . | quote }}
          command: ['sh', '-c', "until nc -z {{ printf "%s %v" (include "groundx.stream.domain" .) (include "groundx.stream.port" .) }}; do echo waiting for stream; sleep 2; done"]
      containers:
        - name: {{ $svc }}
          image: {{ include "groundx.groundx.image" . | quote }}
          imagePullPolicy: {{ include "groundx.groundx.pull" . | quote }}
          ports:
            - containerPort: {{ include "groundx.groundx.containerPort" . }}
              protocol: TCP
{{ include "groundx.renderSecurityContext" (dict "ctx" .Values.groundx.securityContext "indent" 10 "root" $ "user" 1001) }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ include "groundx.groundx.containerPort" . }}
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: {{ include "groundx.groundx.containerPort" . }}
            initialDelaySeconds: 10
            periodSeconds: 30
{{- with .Values.groundx.resources }}
{{ include "groundx.renderContainerResources" (dict "ctx" . "indent" 10) }}
{{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /home/{{ include "groundx.golang.username" . }}/.cashbot/config.yaml
              subPath: config.yaml
            - name: init-db-volume
              mountPath: /app/init-db.sql
              subPath: init-db.sql
      volumes:
        - name: config-volume
          configMap:
            name: config-yaml-map
        - name: init-db-volume
          configMap:
            name: init-database-file
{{- if $lb }}
{{- if eq .Values.cluster.type "openshift" }}
{{ include "groundx.renderRoute" (dict "name" $svc "lb" $lb "root" $) }}
{{- else }}
{{ include "groundx.renderLoadBalancer" (dict "name" $svc "lb" $lb "root" $) }}
{{- end }}
{{- end }}

{{- end }}
