namespace: eyelevel
ingestOnly: false
languages:
  - en
logLevel: info
hasMig: false

admin:
  apiKey: "00000000-0000-0000-0000-000000000000"
  email: "support@mycorp.net"
  password: "password"
  username: "00000000-0000-0000-0000-000000000000"

cluster:
  # "", "eks", "aks", "gke", "openshift", etc.
  type: eks

  nodeLabels:
    cpuMemory: eyelevel-cpu-memory
    cpuOnly: eyelevel-cpu-only
    gpuLayout: eyelevel-gpu-layout
    gpuRanker: eyelevel-gpu-ranker
    gpuSummary: eyelevel-gpu-summary

  tls:
    existingSecret: ""

cache:
  enabled: true

  replicas:
    desired: 1
  isCluster: false

  resources:
    requests:
      cpu: "0.2"
      memory: 512Mi

  # set to use external cache
  # will supercede all other settings except metrics
  existing: {}
    # addr: redis.mycorp.net
    # isCluster: true
    # port: 6379

  metrics:
    # set false if you want to share 1 redis cache
    # for metrics and process metadata caching
    enabled: true

    replicas:
      desired: 1
    isCluster: false

    resources:
      requests:
        cpu: "0.2"
        memory: 512Mi

    # set to use external metrics cache
    # will supercede all other settings in metrics
    existing: {}
      # addr: redis-metrics.mycorp.net
      # isCluster: true
      # port: 6379

db:
  enabled: true

  dbName: eyelevel
  serviceUsername: eyelevel
  servicePassword: password

  # used to initialize DB
  # creates service user, db, and tables
  privilegedUsername: root
  privilegedPassword: password

  # set to use external MySQL DB
  existing: {}
#    ro: myro.mycorp.net
#    rw: myrw.mycorp.net
#    port: 3306

file:
  enabled: true

  bucketName: eyelevel
  username: minio
  password: minio123

  # minio or sqs
  serviceType: minio

  # set to use a custom domain for file URLs
  customDomain: ""

  # set to expose minio externally
  # in openshift, creates a route
  loadBalancer: {}
    # port: 8080

  # set to use existing minio file storage
  existing: {}
    # domain: minio.mycorp.net
    # port: 9000
    # ssl: true

search:
  enabled: true

  indexName: prod-1
  username: eyelevel
  password: R0otb_*t!kazs
  privilegedPassword: R0otb_*t!kazs
  privilegedUsername: admin

  # set to use existing opensearch
  existing: {}
    # domain: search.mycorp.net
    # url: https://search.mycorp.net:9200
    # port: 9200

stream:
  enabled: true

  replicas: 1
  storage: 10Gi

  nodepool:
    replicas: 1
    storage: 5Gi

  resources:
    requests:
      cpu: 200m
      memory: 512Mi

  existing: {}
#    domain: kafka.mycorp.net
#    port: 9092

summary:
  api:
    enabled: true

    threads: 4
    timeout: 240
    workers: 1

    replicas:
      desired: 1
  inference:
    enabled: true

    deviceType: cuda
    deviceUtilize: 0.9
    threads: 1
    workers: 1

    replicas:
      desired: 1

  existing: {}
#    apiKey: my-oai-key
#    serviceType: openai
#    url: https://api.openai.com/v1

groundx:
  enabled: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

layout:
  api:
    enabled: true

    threads: 2
    timeout: 120
    workers: 2

    replicas:
      desired: 1
  correct:
    enabled: true

    queue: correct_queue
    threads: 1
    workers: 1

    replicas:
      desired: 1
  inference:
    enabled: true

    deviceType: cuda
    queue: layout_queue
    threads: 6
    workers: 1

    replicas:
      desired: 1
  map:
    enabled: true

    queue: map_queue
    threads: 1
    workers: 1

    replicas:
      desired: 1
  ocr:
    enabled: true

    project: ""
    queue: ocr_queue
    threads: 1
    type: "tesseract"
    workers: 1

    replicas:
      desired: 1
  process:
    enabled: true

    batchSize: 40
    queue: process_queue
    threads: 1
    workers: 1

    replicas:
      desired: 1
  save:
    enabled: true

    queue: save_queue
    threads: 1
    workers: 1

    replicas:
      desired: 1

layoutWebhook:
  enabled: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

preProcess:
  enabled: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 200m
      memory: 1Gi

process:
  enabled: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 200m
      memory: 256Mi

queue:
  enabled: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

ranker:
  api:
    enabled: true

    threads: 3
    timeout: 120
    workers: 1

    replicas:
      desired: 1
  inference:
    enabled: true

    deviceType: cuda
    threads: 1
    workers: 14

    replicas:
      desired: 1

summaryClient:
  enabled: true

  engines:
    - engineID: google/gemma-3-12b-it
      maxInputTokens: 100000
      maxOutputTokens: 2000
      maxRequests: 4
      requestLimit: 4
      vision: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 100m
      memory: 512Mi

upload:
  enabled: true

  replicas:
    desired: 1

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

throughput:
  tpm:
    document: 12500
    page: 500
    summaryRequest: 625
  services:
    layout:
      correct: 500
      inference: 120000
      map: 500
      ocr: 500
      process: 500
      save: 500
    preProcess:
      queue: 6
    process:
      queue: 9
    queue:
      queue: 9
    ranker:
      inference: 0
    summary:
      api: 9600
      inference: 3200
    summaryClient:
      api: 9600
    upload:
      queue: 120
