'aws: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z X.X.X.use2.cache.amazonaws.com 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z X.s3.us-west-2.amazonaws.com 443; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z X.us-east-2.es.amazonaws.com 443; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z X.X.us-east-2.rds.amazonaws.com 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: 2de95722fed0bcd636e6cf0844a3b5f83779ea555d7c7c778c89b67ff5f65d30
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'cloud: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.eyelevel.svc.cluster.local 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z X.s3.us-west-2.amazonaws.com 443; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-cluster-haproxy-replicas.eyelevel.svc.cluster.local 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: f846518de95d26707c9ba633457a14104b5fd213e22c3851725e7f4991524181
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'default: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.eyelevel.svc.cluster.local 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z minio-tenant-hl.eyelevel.svc.cluster.local 9000; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-cluster-haproxy-replicas.eyelevel.svc.cluster.local 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'disabled: golang':
'empty: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.eyelevel.svc.cluster.local 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z minio-tenant-hl.eyelevel.svc.cluster.local 9000; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-cluster-haproxy-replicas.eyelevel.svc.cluster.local 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'existing: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.existing.com 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z file.existing.com 9000; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z search.existing.com 443; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-ro.existing.com 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z kafka.existing.com 9001; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: c0c8ede29e7fe0c2625a8e130c4d0ab42878d70361039410747707be5b8d58c9
            config-models-hash: 685c61cfbdbf4c97d25918da32f6464ffa4c99f6f86e47266d9c698135088c8a
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'extract: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z X.X.X.use2.cache.amazonaws.com 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z X.s3.us-west-2.amazonaws.com 443; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z X.X.us-east-2.rds.amazonaws.com 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: c865e7b2b5b505aa2eb5c6d79517768810698d2ad18609c7b1ad474d61480798
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'extract.ingest: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z X.X.X.use2.cache.amazonaws.com 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z X.s3.us-west-2.amazonaws.com 443; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z X.X.us-east-2.rds.amazonaws.com 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: 94e187eaae5628b6583fb43ba5ee23018dfd23dc3e7c19da708481c3b6d99cb0
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'extract.oai: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z X.X.X.use2.cache.amazonaws.com 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z X.s3.us-west-2.amazonaws.com 443; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z X.X.us-east-2.rds.amazonaws.com 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: 7dc7b19b1b47418058cb1dfa8f8a20ff9258653f589f1a9422819c18148f52f8
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: existing-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'metadata: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: myapp
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: myapp
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: myapp
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
            prometheus.io/port: "8081"
          labels:
            app: myapp
            app.kubernetes.io/name: myapp
        spec:
          affinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - myapp
                topologyKey: kubernetes.io/hostname
          containers:
            - image: test.image:v1
              imagePullPolicy: Never
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8081
                initialDelaySeconds: 30
                periodSeconds: 30
              name: myapp
              ports:
                - containerPort: 8081
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8081
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                readOnlyRootFilesystem: true
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z myapp.eyelevel.svc.cluster.local 6377; do echo waiting for cache; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z minio-tenant-hl.eyelevel.svc.cluster.local 9000; do echo waiting for file storage; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-cluster-haproxy-replicas.eyelevel.svc.cluster.local 3306; do echo waiting for database; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-stream
          nodeSelector:
            disktype: ssd
          securityContext:
            fsGroup: 2000
          serviceAccountName: other-service-account
          tolerations:
            - effect: NoSchedule
              key: workload-type
              operator: Equal
              value: batch
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "30"
      labels:
        app: myapp
      name: myapp
      namespace: eyelevel
    spec:
      ports:
        - port: 6377
          protocol: TCP
          targetPort: 8081
      selector:
        app: myapp
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q https://myapp.eyelevel.svc.cluster.local:6377/health; do echo waiting for groundx; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: test-label-1
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: other-service-account
          tolerations:
            - effect: NoSchedule
              key: workload-type
              operator: Equal
              value: batch
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q https://myapp.eyelevel.svc.cluster.local:6377/health; do echo waiting for groundx; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            disktype: ssd
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: other-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: test-label-1
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q https://myapp.eyelevel.svc.cluster.local:6377/health; do echo waiting for groundx; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: test-label-1
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: other-service-account
          tolerations:
            - effect: NoSchedule
              key: node
              value: test-label-1
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q https://myapp.eyelevel.svc.cluster.local:6377/health; do echo waiting for groundx; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-groundx
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: other-service-account
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q https://myapp.eyelevel.svc.cluster.local:6377/health; do echo waiting for groundx; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-groundx
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: other-service-account
          tolerations:
            - effect: NoSchedule
              key: workload-type
              operator: Equal
              value: batch
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: 8525b24de7631e5aef73f03b852a83f4a24638b5406da3b2e6e857ac2e172550
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q https://myapp.eyelevel.svc.cluster.local:6377/health; do echo waiting for groundx; sleep 2; done
              image: test.image:v1
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            disktype: ssd
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: other-service-account
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'minikube: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.eyelevel.svc.cluster.local 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z minio-tenant-hl.eyelevel.svc.cluster.local 9000; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-cluster-haproxy-replicas.eyelevel.svc.cluster.local 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: LoadBalancer
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  4: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsGroup: 1001
                runAsNonRoot: true
                runAsUser: 1001
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'openshift: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.eyelevel.svc.cluster.local 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z minio-tenant-hl.eyelevel.svc.cluster.local 9000; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-cluster-haproxy-replicas.eyelevel.svc.cluster.local 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      port:
        targetPort: 8080
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: groundx
  3: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx
      name: groundx
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx
      type: ClusterIP
  4: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  5: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-memory
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-memory
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  10: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: ad1161911f9935e44b940c5c66bb9214862b715c72836e874ac6840a679649ec
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: IfNotPresent
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-cpu-only
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-cpu-only
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
'phoenix: golang':
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: groundx-service
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: groundx-service
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: groundx-service
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: groundx-service
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/groundx:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: groundx-service
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until nc -z cache.eyelevel.svc.cluster.local 6379; do echo waiting for cache; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-cache
            - command:
                - sh
                - -c
                - until nc -z minio-tenant-hl.eyelevel.svc.cluster.local 9000; do echo waiting for file storage; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-file-storage
            - command:
                - sh
                - -c
                - until nc -z opensearch-cluster-master.eyelevel.svc.cluster.local 9200; do echo waiting for search; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-search
            - command:
                - sh
                - -c
                - until nc -z db-ro.existing.com 3306; do echo waiting for database; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-database
            - command:
                - sh
                - -c
                - until nc -z stream-cluster-kafka-bootstrap.eyelevel.svc.cluster.local 9092; do echo waiting for stream; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-stream
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  2: |
    apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: groundx-service
      name: groundx-service
      namespace: eyelevel
    spec:
      port:
        targetPort: 8080
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: groundx-service
  3: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: groundx-service
      name: groundx-service
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: groundx-service
      type: ClusterIP
  4: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: layout-webhook
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: layout-webhook
      namespace: eyelevel
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: layout-webhook
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: layout-webhook
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/layout-webhook:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: layout-webhook
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx-service.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  5: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: layout-webhook
      name: layout-webhook
      namespace: eyelevel
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: layout-webhook
      type: ClusterIP
  6: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: pre-process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: pre-process
      namespace: eyelevel
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: pre-process
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: pre-process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/pre-process:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: pre-process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx-service.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: process
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: process
      namespace: eyelevel
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: process
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: process
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/process:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: process
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx-service.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: queue
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: queue
      namespace: eyelevel
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: queue
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: queue
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/queue:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: queue
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx-service.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: summary-client
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: summary-client
      namespace: eyelevel
    spec:
      replicas: 4
      selector:
        matchLabels:
          app: summary-client
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: summary-client
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/summary-client:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: summary-client
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx-service.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
  10: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: upload
        appVersion: 0.1.0
        chart: groundx-0.1.0
        heritage: Helm
        version: 0.1.0
      name: upload
      namespace: eyelevel
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: upload
      template:
        metadata:
          annotations:
            config-hash: ae09c3855d70b6d86a99debaf5d4d2c621cce4f2887ecaad5f80e842758a11d3
            config-models-hash: 103f9b682137cbfffc161db49f979c124c570933e81ee4ab3270fd5512b58502
          labels:
            app: upload
        spec:
          containers:
            - image: public.ecr.aws/c9r4x6y5/eyelevel/upload:0.1.0
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
              name: upload
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 30
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /home/golang/.cashbot/config.yaml
                  name: config-volume
                  subPath: config.yaml
                - mountPath: /app/init-db.sql
                  name: init-db-volume
                  subPath: init-db.sql
          initContainers:
            - command:
                - sh
                - -c
                - until wget --spider -q http://groundx-service.eyelevel.svc.cluster.local/health; do echo waiting for groundx; sleep 2; done
              image: public.ecr.aws/c9r4x6y5/eyelevel/busybox:1.0.0
              imagePullPolicy: Always
              name: wait-for-groundx
          nodeSelector:
            node: eyelevel-gpu
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node
              value: eyelevel-gpu
          volumes:
            - configMap:
                name: config-yaml-map
              name: config-volume
            - configMap:
                name: init-database-file
              name: init-db-volume
